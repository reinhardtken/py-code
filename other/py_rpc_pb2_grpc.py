# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import py_rpc_pb2 as py__rpc__pb2


class HelloStub(object):
  """定义Hello服务
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SayHello = channel.unary_unary(
        '/proto.Hello/SayHello',
        request_serializer=py__rpc__pb2.HelloRequest.SerializeToString,
        response_deserializer=py__rpc__pb2.HelloReply.FromString,
        )


class HelloServicer(object):
  """定义Hello服务
  """

  def SayHello(self, request, context):
    """定义服务中的方法
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_HelloServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SayHello': grpc.unary_unary_rpc_method_handler(
          servicer.SayHello,
          request_deserializer=py__rpc__pb2.HelloRequest.FromString,
          response_serializer=py__rpc__pb2.HelloReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'proto.Hello', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class EchoStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.echo = channel.unary_unary(
        '/proto.Echo/echo',
        request_serializer=py__rpc__pb2.EchoReq.SerializeToString,
        response_deserializer=py__rpc__pb2.EchoRes.FromString,
        )


class EchoServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def echo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_EchoServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'echo': grpc.unary_unary_rpc_method_handler(
          servicer.echo,
          request_deserializer=py__rpc__pb2.EchoReq.FromString,
          response_serializer=py__rpc__pb2.EchoRes.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'proto.Echo', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class StockPriceStub(object):
  """定义Hello服务
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetPrice = channel.unary_unary(
        '/proto.StockPrice/GetPrice',
        request_serializer=py__rpc__pb2.LastPriceReq.SerializeToString,
        response_deserializer=py__rpc__pb2.LastPriceRsp.FromString,
        )


class StockPriceServicer(object):
  """定义Hello服务
  """

  def GetPrice(self, request, context):
    """定义服务中的方法
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_StockPriceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetPrice': grpc.unary_unary_rpc_method_handler(
          servicer.GetPrice,
          request_deserializer=py__rpc__pb2.LastPriceReq.FromString,
          response_serializer=py__rpc__pb2.LastPriceRsp.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'proto.StockPrice', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
